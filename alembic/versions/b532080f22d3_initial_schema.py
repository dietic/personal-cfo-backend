"""initial schema

Revision ID: b532080f22d3
Revises: 
Create Date: 2025-10-12 01:45:24.227656

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from app.core.types import GUID


# revision identifiers, used by Alembic.
revision: str = 'b532080f22d3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bank_providers',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('short_name', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('country_name', sa.String(), nullable=False),
    sa.Column('logo_url', sa.String(), nullable=True),
    sa.Column('website', sa.String(), nullable=True),
    sa.Column('color_primary', sa.String(), nullable=True),
    sa.Column('color_secondary', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_popular', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('otp_code', sa.String(), nullable=True),
    sa.Column('otp_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('otp_attempts', sa.Integer(), nullable=True),
    sa.Column('otp_last_sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('profile_picture_url', sa.String(), nullable=True),
    sa.Column('preferred_currency', sa.Enum('USD', 'PEN', 'EUR', 'GBP', name='currencyenum'), nullable=True),
    sa.Column('timezone', sa.Enum('UTC-8 (Pacific Time)', 'UTC-7 (Mountain Time)', 'UTC-6 (Central Time)', 'UTC-5 (Eastern Time)', 'UTC-3 (Argentina Time)', 'UTC+0 (London Time)', 'UTC+1 (Central European Time)', name='timezoneenum'), nullable=True),
    sa.Column('budget_alerts_enabled', sa.Boolean(), nullable=True),
    sa.Column('payment_reminders_enabled', sa.Boolean(), nullable=True),
    sa.Column('transaction_alerts_enabled', sa.Boolean(), nullable=True),
    sa.Column('weekly_summary_enabled', sa.Boolean(), nullable=True),
    sa.Column('monthly_reports_enabled', sa.Boolean(), nullable=True),
    sa.Column('email_notifications_enabled', sa.Boolean(), nullable=True),
    sa.Column('push_notifications_enabled', sa.Boolean(), nullable=True),
    sa.Column('plan_tier', sa.Enum('free', 'plus', 'pro', name='usertypeenum'), nullable=False),
    sa.Column('plan_status', sa.String(), nullable=False),
    sa.Column('billing_currency', sa.String(), nullable=False),
    sa.Column('current_period_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancel_at_period_end', sa.Boolean(), nullable=True),
    sa.Column('provider_customer_id', sa.String(), nullable=True),
    sa.Column('provider_subscription_id', sa.String(), nullable=True),
    sa.Column('last_payment_status', sa.String(), nullable=True),
    sa.Column('ai_keyword_usage_count', sa.Integer(), nullable=False),
    sa.Column('ai_keyword_last_used', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ai_keyword_reset_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_plan_tier'), 'users', ['plan_tier'], unique=False)
    op.create_table('budgets',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('user_id', GUID(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('limit_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('month', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cards',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('user_id', GUID(), nullable=False),
    sa.Column('card_name', sa.String(), nullable=False),
    sa.Column('payment_due_date', sa.Date(), nullable=True),
    sa.Column('bank_provider_id', GUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['bank_provider_id'], ['bank_providers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('categories',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('user_id', GUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('color', sa.String(), nullable=True),
    sa.Column('emoji', sa.String(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('is_system', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('ai_seeded_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('merchants',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('user_id', GUID(), nullable=False),
    sa.Column('canonical_name', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('description_patterns', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('transaction_count', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recurring_services',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('user_id', GUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('reminder_days', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_excluded_keywords',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('user_id', GUID(), nullable=False),
    sa.Column('keyword', sa.String(length=255), nullable=False),
    sa.Column('keyword_normalized', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'keyword_normalized', name='uq_user_excluded_keyword_normalized')
    )
    op.create_index(op.f('ix_user_excluded_keywords_keyword_normalized'), 'user_excluded_keywords', ['keyword_normalized'], unique=False)
    op.create_index(op.f('ix_user_excluded_keywords_user_id'), 'user_excluded_keywords', ['user_id'], unique=False)
    op.create_table('category_keywords',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('user_id', GUID(), nullable=False),
    sa.Column('category_id', GUID(), nullable=False),
    sa.Column('keyword', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('incomes',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('user_id', GUID(), nullable=False),
    sa.Column('card_id', GUID(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('income_date', sa.Date(), nullable=False),
    sa.Column('is_recurring', sa.Boolean(), nullable=True),
    sa.Column('recurring_day', sa.Integer(), nullable=True),
    sa.Column('last_processed_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['cards.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('statements',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('user_id', GUID(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_type', sa.String(), nullable=False),
    sa.Column('statement_month', sa.Date(), nullable=True),
    sa.Column('card_id', GUID(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('task_id', sa.String(), nullable=True),
    sa.Column('processing_message', sa.String(), nullable=True),
    sa.Column('transactions_count', sa.Integer(), nullable=True),
    sa.Column('extraction_method', sa.String(), nullable=True),
    sa.Column('extraction_status', sa.String(), nullable=True),
    sa.Column('categorization_status', sa.String(), nullable=True),
    sa.Column('extraction_retries', sa.Integer(), nullable=True),
    sa.Column('categorization_retries', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('processed_transactions', sa.Text(), nullable=True),
    sa.Column('ai_insights', sa.Text(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['cards.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_keyword_rules',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('user_id', GUID(), nullable=False),
    sa.Column('category_id', GUID(), nullable=True),
    sa.Column('include_keywords', sa.Text(), nullable=True),
    sa.Column('exclude_keywords', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('alerts',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('user_id', GUID(), nullable=False),
    sa.Column('statement_id', GUID(), nullable=True),
    sa.Column('alert_type', sa.Enum('SPENDING_LIMIT', 'MERCHANT_WATCH', 'CATEGORY_BUDGET', 'UNUSUAL_SPENDING', 'LARGE_TRANSACTION', 'NEW_MERCHANT', 'BUDGET_EXCEEDED', name='alerttype'), nullable=False),
    sa.Column('severity', sa.Enum('LOW', 'MEDIUM', 'HIGH', name='alertseverity'), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['statement_id'], ['statements.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('card_id', GUID(), nullable=False),
    sa.Column('statement_id', GUID(), nullable=True),
    sa.Column('merchant', sa.String(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('tags', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('ai_confidence', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['cards.id'], ),
    sa.ForeignKeyConstraint(['statement_id'], ['statements.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions')
    op.drop_table('alerts')
    op.drop_table('user_keyword_rules')
    op.drop_table('statements')
    op.drop_table('incomes')
    op.drop_table('category_keywords')
    op.drop_index(op.f('ix_user_excluded_keywords_user_id'), table_name='user_excluded_keywords')
    op.drop_index(op.f('ix_user_excluded_keywords_keyword_normalized'), table_name='user_excluded_keywords')
    op.drop_table('user_excluded_keywords')
    op.drop_table('recurring_services')
    op.drop_table('merchants')
    op.drop_table('categories')
    op.drop_table('cards')
    op.drop_table('budgets')
    op.drop_index(op.f('ix_users_plan_tier'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('bank_providers')
    # ### end Alembic commands ###
